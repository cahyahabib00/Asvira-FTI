version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: asvira-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - asvira-network

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: asvira-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - asvira-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: asvira-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: asvira_fti
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: secret
      MYSQL_USER: asvira
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - dbdata:/var/lib/mysql
    networks:
      - asvira-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: asvira-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - asvira-network

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: asvira-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - asvira-network

volumes:
  dbdata:
    driver: local

networks:
  asvira-network:
    driver: bridge 